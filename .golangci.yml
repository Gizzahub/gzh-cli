# golangci-lint configuration
# https://golangci-lint.run/usage/configuration/

version: "2"

run:
  timeout: 10m
  issues-exit-code: 1
  tests: true
  build-tags: []
  modules-download-mode: readonly
  go: "1.21"

output:
  formats:
    default:
      format: colored-line-number
  print-issued-line: true
  print-linter-name: true

linters-settings:
  lll:
    line-length: 180
  gocyclo:
    min-complexity: 15
  dupl:
    threshold: 100
  gosec:
    excludes:
      - G104 # Unchecked errors - handled by errcheck
      - G204 # Command execution - expected in CLI tool
      - G304 # File path from user input - expected in CLI tool
  funlen:
    lines: 100
    statements: 50
  gocognit:
    min-complexity: 20
  errcheck:
    check-type-assertions: true
    check-blank: true
    exclude-functions:
      - fmt.Print
      - fmt.Println
      - fmt.Printf
      - fmt.Fprint
      - fmt.Fprintf
      - fmt.Fprintln
      - (*os.File).Close
      - (*text/tabwriter.Writer).Flush
      - (*os.File).Sync
      - os.Remove
      - os.RemoveAll
  govet:
    enable-all: true
    disable:
      - fieldalignment
      - shadow
  staticcheck:
    checks: ["all"]
  revive:
    rules:
      - name: exported
        disabled: false
      - name: package-comments
        disabled: true
      - name: var-naming
        disabled: false
      - name: indent-error-flow
        disabled: false
      - name: unnecessary-stmt
        disabled: false
      - name: unreachable-code
        disabled: false
      - name: early-return
        disabled: false
      - name: blank-imports
        disabled: false
      - name: context-as-argument
        disabled: false
      - name: context-keys-type
        disabled: false
      - name: dot-imports
        disabled: false
      - name: error-return
        disabled: false
      - name: error-strings
        disabled: false
      - name: error-naming
        disabled: false
      - name: increment-decrement
        disabled: false
      - name: receiver-naming
        disabled: false
      - name: struct-tag
        disabled: false
      - name: time-naming
        disabled: false
  gocritic:
    enabled-tags:
      - diagnostic
      - style
      - performance
      - experimental
      - opinionated
    disabled-checks:
      - hugeParam  # Too restrictive for some use cases
      - rangeValCopy  # Sometimes copying is intentional
      - commentedOutCode  # False positives in test data
    settings:
      hugeParam:
        sizeThreshold: 512
      rangeValCopy:
        sizeThreshold: 512
      rangeExprCopy:
        sizeThreshold: 512
  goconst:
    min-len: 3
    min-occurrences: 3
    ignore-tests: true
  misspell:
    locale: US
  unparam:
    check-exported: false
  nakedret:
    max-func-lines: 30
  prealloc:
    simple: true
    range-loops: true
    for-loops: true
  gomodguard:
    blocked:
      modules:
        - github.com/pkg/errors:
            recommendations:
              - errors
              - fmt
            reason: "We use stdlib errors with Go 1.13+ error wrapping"
  depguard:
    rules:
      main:
        deny:
          - pkg: "github.com/pkg/errors"
            desc: "Use stdlib errors instead"
          - pkg: "io/ioutil"
            desc: "Deprecated. Use io or os package instead"
  godot:
    scope: declarations
    exclude:
      - "^TODO"
      - "^FIXME"
      - "^NOTE"
  goheader:
    values:
      const:
        COMPANY: Archmagece
        LICENSE: MIT
    template: |-
      Copyright (c) {{ YEAR }} {{ COMPANY }}
      SPDX-License-Identifier: {{ LICENSE }}
  testpackage:
    skip-regexp: "(export|internal)_test\\.go"
  tparallel:
    ignore:
      - "^Test.*Parallel.*$"
  varnamelen:
    min-name-length: 2
    check-receiver: false
    check-return: false
    check-type-param: true
    ignore:
      - err
      - ok
      - id
      - vm
      - db
      - tx
      - i
      - j
      - k
      - v
      - w
      - tt
      - tc
      - t
      - mu
      - fn
      - op
  wsl_v5:
    allow-first-in-block: true
    allow-whole-block: false
    branch-max-lines: 2
  tagliatelle:
    case:
      use-field-name: true
      rules:
        json: snake
        yaml: camel
        xml: camel
        bson: camel
        avro: snake
        mapstructure: kebab
  nestif:
    min-complexity: 4
  exhaustive:
    check-generated: false
    default-signifies-exhaustive: false
  errorlint:
    errorf: true
    asserts: true
    comparison: true
  godox:
    keywords:
      - TODO
      - FIXME
      - BUG
      - HACK
      - OPTIMIZE
      - XXX
  maintidx:
    under: 20
  musttag:
    functions:
      - name: json.Marshal
      - name: json.MarshalIndent
      - name: json.Unmarshal
      - name: yaml.Marshal
      - name: yaml.Unmarshal
      - name: yaml.Encode
      - name: yaml.Decode
      - name: toml.Marshal
      - name: toml.Unmarshal
      - name: toml.Encode
      - name: toml.Decode
      - name: xml.Marshal
      - name: xml.MarshalIndent
      - name: xml.Unmarshal
  thelper:
    check:
      begin: true
      first: true
      name: true
      fuzz: true
      benchmark: true
      tb: true

linters:
  disable-all: true
  enable:
    # Core linters (enabled by default)
    - errcheck
    - govet
    - staticcheck
    - unused
    - ineffassign
    
    # Code quality
    - revive
    - gocritic
    - goconst
    - unconvert
    - unparam
    - misspell
    - prealloc
    - nakedret
    - exhaustive
    
    # Security
    - gosec
    
    # Complexity
    - gocyclo
    - gocognit
    
    # Style
    - whitespace
    - godot
    - goheader
    
    # Performance
    - bodyclose
    - rowserrcheck
    - sqlclosecheck
    
    # Bugs
    - nilerr
    - nilnil
    - noctx
    - copyloopvar
    - musttag
    - asasalint
    - bidichk
    - contextcheck
    - durationcheck
    - errname
    - errorlint
    - forcetypeassert
    - gomoddirectives
    
    # Dependencies
    - gomodguard
    # - depguard  # Disabled due to configuration issues
    
    # Testing
    - testpackage
    - thelper
    
    # Naming
    - tagliatelle

issues:
  max-issues-per-linter: 10
  max-same-issues: 5
  new: false
  exclude-use-default: false
  uniq-by-line: true
  exclude-dirs:
    - vendor
    - .git
    - tmp
    - test/integration  # Exclude all integration tests with outdated API usage
  exclude-files:
    - ".*\\.pb\\.go$"
    - ".*\\.gen\\.go$"
    - ".*/pkg/bulk-clone/example_test\\.go$"
    - "pkg/bulk-clone/example_test\\.go$"
  exclude-rules:
    # Exclude specific patterns in test files
    - path: "_test\\.go"
      linters:
        - gosec
        - dupl
        - funlen
        - gocyclo
        - gocognit
        - revive
        - errcheck
    
    # Exclude generated files
    - path: ".*\\.pb\\.go$"
      linters:
        - all
    - path: ".*\\.gen\\.go$"
      linters:
        - all
    
    # Exclude integration tests with outdated API usage
    - path: "test/integration/docker/.*\\.go$"
      linters:
        - all
    - path: "test/integration/github/.*\\.go$"
      linters:
        - all
    - path: "pkg/bulk-clone/example_test\\.go$"
      linters:
        - all
    - path: ".*/pkg/bulk-clone/example_test\\.go$"
      linters:
        - all
    
    # Exclude common false positives
    - text: "Error return value of.*Close.*is not checked"
      linters:
        - errcheck
    - text: "Error return value of.*Flush.*is not checked"
      linters:
        - errcheck
    - text: "Error return value of.*Sync.*is not checked"
      linters:
        - errcheck
    - text: "Error return value of.*Remove.*is not checked"
      linters:
        - errcheck
    - text: "Error return value of.*Write.*is not checked"
      linters:
        - errcheck
    - text: "Error return value of.*MarkFlagRequired.*is not checked"
      linters:
        - errcheck
    
    # Exclude specific staticcheck rules
    - text: "SA4006.*this value.*is never used"
      linters:
        - staticcheck
    - text: "S1031.*unnecessary nil check around range"
      linters:
        - staticcheck
    - text: "ST1023.*should omit type.*from declaration"
      linters:
        - staticcheck
    - text: "S1008.*should use.*instead of.*if.*return"
      linters:
        - staticcheck
    
    # Exclude ineffassign for config pattern
    - text: "ineffectual assignment to.*config"
      linters:
        - ineffassign
    
    # Exclude unused for specific patterns
    - text: ".*is unused"
      linters:
        - unused
      path: "_test\\.go"
    
    # Exclude specific function patterns
    - text: "func.*runWithGZHConfig.*is unused"
      linters:
        - unused
    - text: "field.*circuitOpen.*is unused"
      linters:
        - unused
    - text: "field.*mu.*is unused"
      linters:
        - unused
    
    # Exclude linters for test files
    - path: "_test\\.go"
      linters:
        - wsl_v5
        - godox
        - varnamelen
        - maintidx
        - funlen
        - gocognit
        - gocyclo
        - contextcheck
        - tagliatelle
    
    # Exclude godox for specific files
    - path: "(cmd/|internal/)"
      text: "TODO|FIXME|BUG"
      linters:
        - godox
    
    # Exclude header check for generated and test files
    - path: "(.*_test\\.go|.*\\.pb\\.go|.*\\.gen\\.go)"
      linters:
        - goheader
    
    # Exclude exhaustive for command handlers
    - path: "cmd/"
      linters:
        - exhaustive
    
    # Exclude tagliatelle for existing structs
    - path: "(pkg/config/|pkg/bulk-clone/)"
      linters:
        - tagliatelle
    
    # Exclude errorlint for legacy code
    - path: "pkg/legacy/"
      linters:
        - errorlint
        - contextcheck
    
    # Allow longer variable names in table tests
    - path: "_test\\.go"
      text: "tt.*is too short"
      linters:
        - varnamelen
    
    # Allow context.Background() in main and test
    - path: "(main\\.go|.*_test\\.go)"
      linters:
        - contextcheck
    
    # Exclude nestif for complex command logic
    - path: "cmd/net-env/"
      linters:
        - nestif
        - maintidx
        - contextcheck
        - funlen
        - gocognit
    
    # Exclude testpackage for cmd directory test files
    - path: "^cmd/.*_test\\.go$"
      linters:
        - testpackage
    
    # Exclude issues for cmd directory
    - path: "cmd/"
      linters:
        - contextcheck
        - funlen
        - gocognit
        - varnamelen
        - tagliatelle
        - lll
        - gosec
        - errcheck
        - depguard
        - goconst
        - revive