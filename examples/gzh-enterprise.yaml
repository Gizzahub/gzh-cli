# Enterprise gzh.yaml configuration
# Example for large organizations with complex requirements

version: "1.0.0"
default_provider: github

providers:
  # GitHub Enterprise configuration
  github:
    token: "${GITHUB_ENTERPRISE_TOKEN}"
    orgs:
      # Core platform services
      - name: "platform-core"
        visibility: "private"
        clone_dir: "${WORKSPACE}/platform/core"
        match: "^(auth|user|payment|notification)-service$"
        exclude: [".*-deprecated", ".*-experimental"]
        strategy: "reset" # Ensure consistency
        flatten: false

      # Microservices ecosystem
      - name: "microservices"
        visibility: "private"
        clone_dir: "${WORKSPACE}/platform/services"
        match: "^service-.*"
        exclude: ["service-legacy-*", "service-archived-*"]
        strategy: "pull"
        flatten: true # Easier service discovery

      # Frontend applications
      - name: "frontend-apps"
        visibility: "private"
        clone_dir: "${WORKSPACE}/frontend"
        match: "^(web|mobile|desktop)-.*"
        exclude: [".*-poc", ".*-prototype"]
        strategy: "pull"
        flatten: false

      # Data and analytics
      - name: "data-platform"
        visibility: "private"
        clone_dir: "${WORKSPACE}/data"
        match: "^(etl|pipeline|warehouse|analytics)-.*"
        strategy: "reset" # Critical data consistency
        flatten: false

      # Infrastructure as Code
      - name: "infrastructure"
        visibility: "private"
        clone_dir: "${WORKSPACE}/infrastructure"
        match: "^(terraform|ansible|kubernetes|docker)-.*"
        exclude: [".*-sandbox", ".*-experiment"]
        strategy: "reset" # Infrastructure must be consistent
        flatten: false

      # Security and compliance
      - name: "security"
        visibility: "private"
        clone_dir: "${WORKSPACE}/security"
        match: "^(security|compliance|audit)-.*"
        strategy: "reset"
        flatten: false

      # Open source contributions
      - name: "opensource"
        visibility: "public"
        clone_dir: "${WORKSPACE}/opensource"
        strategy: "fetch" # Read-only contributions
        flatten: true

  # GitLab Enterprise configuration (backup/mirror)
  gitlab:
    token: "${GITLAB_ENTERPRISE_TOKEN}"
    groups:
      # Critical system backups
      - name: "enterprise/backup"
        visibility: "private"
        recursive: true
        clone_dir: "${BACKUP_DIR}/gitlab"
        strategy: "fetch" # Backup purposes only
        flatten: false

      # Cross-team collaboration
      - name: "enterprise/shared"
        visibility: "private"
        recursive: false
        clone_dir: "${WORKSPACE}/shared/gitlab"
        match: "^shared-.*"
        strategy: "pull"
# Environment variables typically used in enterprise:
# WORKSPACE=/enterprise/projects
# BACKUP_DIR=/enterprise/backups
# GITHUB_ENTERPRISE_TOKEN=token_for_github_enterprise
# GITLAB_ENTERPRISE_TOKEN=token_for_gitlab_enterprise
