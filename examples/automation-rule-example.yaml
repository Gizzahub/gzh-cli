# Example automation rule configuration
# This file demonstrates how to define automation rules for GitHub events

# Basic Pull Request Auto-Review Assignment
apiVersion: "automation/v1"
kind: "AutomationRule"
metadata:
  name: "auto-assign-reviewers"
  description: "Automatically assign reviewers when PR is opened"
  organization: "myorg"
  tags:
    environment: "production"
    team: "backend"
    category: "code-review"

spec:
  id: "auto-assign-reviewers-001"
  name: "Auto Assign Reviewers"
  description: "Automatically assign reviewers to pull requests based on file changes"
  organization: "myorg"
  enabled: true
  priority: 100
  
  conditions:
    logical_operator: "AND"
    event_types:
      - "pull_request"
    actions:
      - "opened"
      - "ready_for_review"
    repository_patterns:
      - "^backend-.*"
      - "^api-.*"
    file_patterns:
      - "*.go"
      - "*.sql"
    payload_match:
      - path: "$.pull_request.draft"
        operator: "equals"
        value: false
      - path: "$.pull_request.base.ref"
        operator: "equals"
        value: "main"
  
  actions:
    - id: "assign-go-reviewers"
      type: "assign_reviewer"
      name: "Assign Go Code Reviewers"
      enabled: true
      parameters:
        reviewers:
          - "go-expert-1"
          - "go-expert-2"
        request_review: true
        notify_slack: true
        slack_channel: "#code-review"
      timeout: "30s"
      retry_policy:
        max_retries: 3
        retry_interval: "10s"
        backoff_factor: 2.0
      on_failure: "continue"
    
    - id: "add-review-label"
      type: "add_label"
      name: "Add Review Required Label"
      enabled: true
      parameters:
        labels:
          - "review-required"
          - "backend"
      timeout: "15s"

  metadata:
    version: "1.0"
    category: "code-review"
    environment: "production"
    owner: "backend-team"
    team: "platform"
    documentation: "https://wiki.company.com/automation-rules/auto-assign-reviewers"

---
# Security Alert Automation
apiVersion: "automation/v1"
kind: "AutomationRule"
metadata:
  name: "security-alert-handler"
  description: "Handle security vulnerabilities and alerts"
  organization: "myorg"
  tags:
    priority: "critical"
    team: "security"
    category: "security"

spec:
  id: "security-alert-handler-001"
  name: "Security Alert Handler"
  description: "Automatically handle security alerts and create issues"
  organization: "myorg"
  enabled: true
  priority: 200
  
  conditions:
    logical_operator: "OR"
    event_types:
      - "repository_vulnerability_alert"
      - "security_advisory"
    custom_filters:
      severity: ["high", "critical"]
  
  actions:
    - id: "create-security-issue"
      type: "create_issue"
      name: "Create Security Issue"
      enabled: true
      parameters:
        title: "🚨 Security Alert: {{.alert.title}}"
        body: |
          ## Security Alert Details
          
          **Severity:** {{.alert.severity}}
          **Package:** {{.alert.package}}
          **Vulnerable Version:** {{.alert.vulnerable_version}}
          **Patched Version:** {{.alert.patched_version}}
          
          **Description:**
          {{.alert.description}}
          
          **Recommendation:**
          {{.alert.recommendation}}
          
          **References:**
          {{range .alert.references}}
          - {{.}}
          {{end}}
          
          ---
          *This issue was automatically created by the security automation system.*
        labels:
          - "security"
          - "high-priority"
          - "automated"
        assignees:
          - "security-team-lead"
          - "tech-lead"
        milestone: "Security Fixes"
      timeout: "60s"
      retry_policy:
        max_retries: 2
        retry_interval: "30s"
      on_failure: "stop"
    
    - id: "notify-security-team"
      type: "slack_message"
      name: "Notify Security Team"
      enabled: true
      parameters:
        channel: "#security-alerts"
        message: |
          🚨 **Security Alert Detected**
          
          Repository: {{.repository.name}}
          Severity: {{.alert.severity}}
          Package: {{.alert.package}}
          
          Issue created: {{.issue.url}}
        urgent: true
        mention_users:
          - "@security-team"
          - "@on-call"
      timeout: "30s"

---
# Deployment Pipeline Automation
apiVersion: "automation/v1"
kind: "AutomationRule"
metadata:
  name: "deployment-pipeline"
  description: "Automated deployment pipeline for release branches"
  organization: "myorg"
  tags:
    environment: "production"
    team: "devops"
    category: "deployment"

spec:
  id: "deployment-pipeline-001"
  name: "Deployment Pipeline"
  description: "Trigger deployment when release branch is created"
  organization: "myorg"
  enabled: true
  priority: 150
  
  conditions:
    logical_operator: "AND"
    event_types:
      - "create"
    actions:
      - "created"
    branch_patterns:
      - "^release/.*"
    business_hours: true
    days_of_week: [1, 2, 3, 4, 5] # Monday to Friday
    
  actions:
    - id: "trigger-deployment-workflow"
      type: "trigger_workflow"
      name: "Trigger Deployment Workflow"
      enabled: true
      parameters:
        workflow_file: "deploy-production.yml"
        ref: "{{.branch}}"
        inputs:
          environment: "production"
          version: "{{.tag}}"
          notify_slack: "true"
      timeout: "300s"
      retry_policy:
        max_retries: 1
        retry_interval: "60s"
      on_failure: "stop"
    
    - id: "create-deployment-issue"
      type: "create_issue"
      name: "Create Deployment Tracking Issue"
      enabled: true
      parameters:
        title: "🚀 Production Deployment: {{.branch}}"
        body: |
          ## Deployment Information
          
          **Branch:** {{.branch}}
          **Version:** {{.tag}}
          **Triggered by:** {{.sender.login}}
          **Started at:** {{.timestamp}}
          
          ## Checklist
          - [ ] Deployment workflow completed
          - [ ] Health checks passed
          - [ ] Monitoring alerts reviewed
          - [ ] Stakeholders notified
          
          ## Links
          - [Deployment Workflow]({{.workflow.url}})
          - [Monitoring Dashboard](https://monitoring.company.com)
          - [Release Notes](https://github.com/{{.repository.full_name}}/releases)
        labels:
          - "deployment"
          - "production"
          - "tracking"
        assignees:
          - "devops-team"
        milestone: "Production Releases"
      timeout: "45s"

---
# Code Quality Automation
apiVersion: "automation/v1"
kind: "AutomationRule"
metadata:
  name: "code-quality-check"
  description: "Automated code quality checks and enforcement"
  organization: "myorg"
  tags:
    team: "platform"
    category: "quality"

spec:
  id: "code-quality-check-001"
  name: "Code Quality Check"
  description: "Run code quality checks on pull requests"
  organization: "myorg"
  enabled: true
  priority: 80
  
  conditions:
    logical_operator: "AND"
    event_types:
      - "pull_request"
    actions:
      - "opened"
      - "synchronize"
    repository_patterns:
      - "^(?!test-).*" # Exclude test repositories
    file_patterns:
      - "*.go"
      - "*.js"
      - "*.ts"
      - "*.py"
    payload_match:
      - path: "$.pull_request.draft"
        operator: "equals"
        value: false
  
  actions:
    - id: "run-linter"
      type: "trigger_workflow"
      name: "Run Code Linter"
      enabled: true
      parameters:
        workflow_file: "code-quality.yml"
        ref: "{{.pull_request.head.ref}}"
        inputs:
          check_type: "lint"
          pr_number: "{{.pull_request.number}}"
      timeout: "120s"
      on_failure: "continue"
    
    - id: "run-security-scan"
      type: "trigger_workflow"
      name: "Run Security Scan"
      enabled: true
      parameters:
        workflow_file: "security-scan.yml"
        ref: "{{.pull_request.head.ref}}"
        inputs:
          scan_type: "sast"
          pr_number: "{{.pull_request.number}}"
      timeout: "180s"
      on_failure: "continue"
    
    - id: "add-quality-labels"
      type: "add_label"
      name: "Add Quality Check Labels"
      enabled: true
      parameters:
        labels:
          - "quality-check-pending"
        remove_labels:
          - "quality-check-passed"
          - "quality-check-failed"
      timeout: "15s"

---
# Automated Issue Triage
apiVersion: "automation/v1"
kind: "AutomationRule"
metadata:
  name: "issue-triage"
  description: "Automatically triage and categorize new issues"
  organization: "myorg"
  tags:
    team: "support"
    category: "triage"

spec:
  id: "issue-triage-001"
  name: "Issue Triage"
  description: "Automatically triage and label new issues"
  organization: "myorg"
  enabled: true
  priority: 90
  
  conditions:
    logical_operator: "AND"
    event_types:
      - "issues"
    actions:
      - "opened"
    payload_match:
      - path: "$.issue.user.type"
        operator: "not_equals"
        value: "Bot"
  
  actions:
    - id: "categorize-bug-report"
      type: "add_label"
      name: "Categorize Bug Report"
      enabled: true
      parameters:
        condition_check:
          payload_match:
            - path: "$.issue.title"
              operator: "contains"
              value: "bug"
              case_sensitive: false
            - path: "$.issue.body"
              operator: "contains"
              value: "expected behavior"
              case_sensitive: false
        labels:
          - "bug"
          - "triage-needed"
        priority: "medium"
      timeout: "20s"
    
    - id: "categorize-feature-request"
      type: "add_label"
      name: "Categorize Feature Request"
      enabled: true
      parameters:
        condition_check:
          payload_match:
            - path: "$.issue.title"
              operator: "regex"
              value: "(feature|enhancement|improvement)"
              case_sensitive: false
        labels:
          - "enhancement"
          - "feature-request"
          - "triage-needed"
        priority: "low"
      timeout: "20s"
    
    - id: "assign-initial-triager"
      type: "assign_reviewer"
      name: "Assign Initial Triager"
      enabled: true
      parameters:
        assignees:
          - "triage-bot"
        notify: false
      timeout: "15s"
    
    - id: "send-acknowledgment"
      type: "create_issue_comment"
      name: "Send Acknowledgment Comment"
      enabled: true
      parameters:
        body: |
          Thank you for opening this issue! 🙏
          
          This issue has been automatically triaged and labeled. A team member will review it soon.
          
          **Next Steps:**
          - We'll review the issue within 2 business days
          - If you need urgent assistance, please contact our support team
          - You can track the progress of this issue using the labels above
          
          ---
          *This is an automated message from the issue triage system.*
      timeout: "30s"