# Automation Rule Templates
# These templates provide reusable automation rule configurations

# Template for PR Auto-Assignment
---
apiVersion: "automation/v1"
kind: "AutomationRuleTemplate"
metadata:
  name: "pr-auto-assignment"
  description: "Template for automatically assigning reviewers to pull requests"
  category: "code-review"

spec:
  id: "template-pr-auto-assignment"
  name: "PR Auto Assignment Template"
  description: "Automatically assign reviewers based on file changes and repository patterns"
  category: "code-review"

  variables:
    - name: "organization"
      type: "string"
      description: "GitHub organization name"
      required: true

    - name: "repository_patterns"
      type: "array"
      description: "Repository name patterns to match"
      required: true
      default_value: [".*"]

    - name: "file_patterns"
      type: "array"
      description: "File patterns that trigger reviewer assignment"
      required: true
      default_value: ["*"]

    - name: "reviewers"
      type: "array"
      description: "List of reviewer usernames"
      required: true

    - name: "labels"
      type: "array"
      description: "Labels to add to the PR"
      required: false
      default_value: ["review-required"]

    - name: "slack_channel"
      type: "string"
      description: "Slack channel for notifications"
      required: false

    - name: "priority"
      type: "number"
      description: "Rule priority (higher numbers = higher priority)"
      required: false
      default_value: 100

    - name: "target_branches"
      type: "array"
      description: "Target branches that trigger the rule"
      required: false
      default_value: ["main", "master", "develop"]

  template:
    id: "{{.organization}}-pr-auto-assignment"
    name: "PR Auto Assignment - {{.organization}}"
    description: "Automatically assign reviewers for {{.organization}}"
    organization: "{{.organization}}"
    enabled: true
    priority: "{{.priority}}"

    conditions:
      logical_operator: "AND"
      event_types:
        - "pull_request"
      actions:
        - "opened"
        - "ready_for_review"
      repository_patterns: "{{.repository_patterns}}"
      file_patterns: "{{.file_patterns}}"
      payload_match:
        - path: "$.pull_request.draft"
          operator: "equals"
          value: false
        - path: "$.pull_request.base.ref"
          operator: "in"
          value: "{{.target_branches}}"

    actions:
      - id: "assign-reviewers"
        type: "assign_reviewer"
        name: "Assign Reviewers"
        enabled: true
        parameters:
          reviewers: "{{.reviewers}}"
          request_review: true
          notify_slack: "{{if .slack_channel}}true{{else}}false{{end}}"
          slack_channel: "{{.slack_channel}}"
        timeout: "30s"
        retry_policy:
          max_retries: 3
          retry_interval: "10s"
        on_failure: "continue"

      - id: "add-labels"
        type: "add_label"
        name: "Add Review Labels"
        enabled: true
        parameters:
          labels: "{{.labels}}"
        timeout: "15s"

  examples:
    - name: "Backend Team Setup"
      description: "Configuration for backend team repositories"
      variables:
        organization: "mycompany"
        repository_patterns:
          - "^backend-.*"
          - "^api-.*"
        file_patterns:
          - "*.go"
          - "*.sql"
          - "*.proto"
        reviewers:
          - "backend-lead"
          - "senior-dev-1"
          - "senior-dev-2"
        labels:
          - "review-required"
          - "backend"
        slack_channel: "#backend-reviews"
        priority: 120
        target_branches: ["main", "develop"]

    - name: "Frontend Team Setup"
      description: "Configuration for frontend team repositories"
      variables:
        organization: "mycompany"
        repository_patterns:
          - "^frontend-.*"
          - "^ui-.*"
          - "^web-.*"
        file_patterns:
          - "*.ts"
          - "*.tsx"
          - "*.js"
          - "*.jsx"
          - "*.css"
          - "*.scss"
        reviewers:
          - "frontend-lead"
          - "ui-expert"
        labels:
          - "review-required"
          - "frontend"
        slack_channel: "#frontend-reviews"
        priority: 110

---
# Template for Security Issue Creation
apiVersion: "automation/v1"
kind: "AutomationRuleTemplate"
metadata:
  name: "security-issue-automation"
  description: "Template for automatically handling security alerts"
  category: "security"

spec:
  id: "template-security-issue"
  name: "Security Issue Automation Template"
  description: "Automatically create issues and notifications for security alerts"
  category: "security"

  variables:
    - name: "organization"
      type: "string"
      description: "GitHub organization name"
      required: true

    - name: "security_team"
      type: "array"
      description: "Security team member usernames"
      required: true

    - name: "severity_levels"
      type: "array"
      description: "Security severity levels to handle"
      required: false
      default_value: ["high", "critical"]

    - name: "slack_channel"
      type: "string"
      description: "Slack channel for security notifications"
      required: true

    - name: "issue_labels"
      type: "array"
      description: "Labels to add to security issues"
      required: false
      default_value: ["security", "high-priority", "automated"]

    - name: "milestone"
      type: "string"
      description: "Milestone for security issues"
      required: false
      default_value: "Security Fixes"

    - name: "priority"
      type: "number"
      description: "Rule priority"
      required: false
      default_value: 200

  template:
    id: "{{.organization}}-security-automation"
    name: "Security Alert Handler - {{.organization}}"
    description: "Handle security alerts for {{.organization}}"
    organization: "{{.organization}}"
    enabled: true
    priority: "{{.priority}}"

    conditions:
      logical_operator: "OR"
      event_types:
        - "repository_vulnerability_alert"
        - "security_advisory"
      custom_filters:
        severity: "{{.severity_levels}}"

    actions:
      - id: "create-security-issue"
        type: "create_issue"
        name: "Create Security Issue"
        enabled: true
        parameters:
          title: "ðŸš¨ Security Alert: {{`{{.alert.title}}`}}"
          body: |
            ## Security Alert Details

            **Severity:** {{`{{.alert.severity}}`}}
            **Package:** {{`{{.alert.package}}`}}
            **Vulnerable Version:** {{`{{.alert.vulnerable_version}}`}}
            **Patched Version:** {{`{{.alert.patched_version}}`}}

            **Description:**
            {{`{{.alert.description}}`}}

            **Recommendation:**
            {{`{{.alert.recommendation}}`}}

            ---
            *This issue was automatically created by the security automation system.*
          labels: "{{.issue_labels}}"
          assignees: "{{.security_team}}"
          milestone: "{{.milestone}}"
        timeout: "60s"
        retry_policy:
          max_retries: 2
          retry_interval: "30s"
        on_failure: "stop"

      - id: "notify-security-team"
        type: "slack_message"
        name: "Notify Security Team"
        enabled: true
        parameters:
          channel: "{{.slack_channel}}"
          message: |
            ðŸš¨ **Security Alert Detected**

            Repository: {{`{{.repository.name}}`}}
            Severity: {{`{{.alert.severity}}`}}
            Package: {{`{{.alert.package}}`}}

            Issue created: {{`{{.issue.url}}`}}
          urgent: true
          mention_users: "{{.security_team}}"
        timeout: "30s"

---
# Template for Deployment Automation
apiVersion: "automation/v1"
kind: "AutomationRuleTemplate"
metadata:
  name: "deployment-automation"
  description: "Template for automated deployment workflows"
  category: "deployment"

spec:
  id: "template-deployment"
  name: "Deployment Automation Template"
  description: "Automate deployment workflows for release branches"
  category: "deployment"

  variables:
    - name: "organization"
      type: "string"
      description: "GitHub organization name"
      required: true

    - name: "environment"
      type: "string"
      description: "Deployment environment"
      required: true
      options: ["staging", "production", "development"]

    - name: "branch_patterns"
      type: "array"
      description: "Branch patterns that trigger deployment"
      required: true
      default_value: ["^release/.*", "^hotfix/.*"]

    - name: "workflow_file"
      type: "string"
      description: "GitHub Actions workflow file name"
      required: true

    - name: "devops_team"
      type: "array"
      description: "DevOps team member usernames"
      required: true

    - name: "business_hours_only"
      type: "boolean"
      description: "Only deploy during business hours"
      required: false
      default_value: true

    - name: "notification_channels"
      type: "object"
      description: "Notification channels configuration"
      required: false
      default_value:
        slack: "#deployments"
        teams: ""
        email: []

    - name: "priority"
      type: "number"
      description: "Rule priority"
      required: false
      default_value: 150

  template:
    id: "{{.organization}}-{{.environment}}-deployment"
    name: "{{.environment | title}} Deployment - {{.organization}}"
    description: "Automated {{.environment}} deployment for {{.organization}}"
    organization: "{{.organization}}"
    enabled: true
    priority: "{{.priority}}"

    conditions:
      logical_operator: "AND"
      event_types:
        - "create"
        - "push"
      actions:
        - "created"
      branch_patterns: "{{.branch_patterns}}"
      business_hours: "{{.business_hours_only}}"
      days_of_week: [1, 2, 3, 4, 5]

    actions:
      - id: "trigger-deployment"
        type: "trigger_workflow"
        name: "Trigger {{.environment | title}} Deployment"
        enabled: true
        parameters:
          workflow_file: "{{.workflow_file}}"
          ref: "{{`{{.branch}}`}}"
          inputs:
            environment: "{{.environment}}"
            version: "{{`{{.tag}}`}}"
            notify_slack: "true"
        timeout: "300s"
        retry_policy:
          max_retries: 1
          retry_interval: "60s"
        on_failure: "stop"

      - id: "create-deployment-issue"
        type: "create_issue"
        name: "Create Deployment Tracking Issue"
        enabled: true
        parameters:
          title: "ðŸš€ {{.environment | title}} Deployment: {{`{{.branch}}`}}"
          body: |
            ## Deployment Information

            **Environment:** {{.environment}}
            **Branch:** {{`{{.branch}}`}}
            **Version:** {{`{{.tag}}`}}
            **Triggered by:** {{`{{.sender.login}}`}}
            **Started at:** {{`{{.timestamp}}`}}

            ## Checklist
            - [ ] Deployment workflow completed
            - [ ] Health checks passed
            - [ ] Monitoring alerts reviewed
            - [ ] Stakeholders notified

            ## Links
            - [Deployment Workflow]({{`{{.workflow.url}}`}})
            - [Monitoring Dashboard](https://monitoring.company.com)
          labels:
            - "deployment"
            - "{{.environment}}"
            - "tracking"
          assignees: "{{.devops_team}}"
          milestone: "{{.environment | title}} Releases"
        timeout: "45s"

      - id: "notify-teams"
        type: "slack_message"
        name: "Notify Teams"
        enabled: "{{if .notification_channels.slack}}true{{else}}false{{end}}"
        parameters:
          channel: "{{.notification_channels.slack}}"
          message: |
            ðŸš€ **{{.environment | title}} Deployment Started**

            Repository: {{`{{.repository.name}}`}}
            Branch: {{`{{.branch}}`}}
            Version: {{`{{.tag}}`}}
            Triggered by: {{`{{.sender.login}}`}}

            [Track Progress]({{`{{.issue.url}}`}})
        timeout: "30s"

  examples:
    - name: "Production Deployment"
      description: "Production deployment configuration"
      variables:
        organization: "mycompany"
        environment: "production"
        branch_patterns:
          - "^release/.*"
        workflow_file: "deploy-production.yml"
        devops_team:
          - "devops-lead"
          - "platform-engineer"
        business_hours_only: true
        notification_channels:
          slack: "#production-deployments"
          teams: "Production Team"
          email: ["devops@company.com"]
        priority: 200

    - name: "Staging Deployment"
      description: "Staging deployment configuration"
      variables:
        organization: "mycompany"
        environment: "staging"
        branch_patterns:
          - "^release/.*"
          - "^feature/.*"
        workflow_file: "deploy-staging.yml"
        devops_team:
          - "devops-lead"
        business_hours_only: false
        notification_channels:
          slack: "#staging-deployments"
        priority: 150
