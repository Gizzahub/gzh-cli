{
  "tasks": [
    {
      "args": [
        "build"
      ],
      "command": "make",
      "detail": "Build the gz binary using make",
      "group": {
        "isDefault": true,
        "kind": "build"
      },
      "label": "go: build",
      "presentation": {
        "clear": false,
        "echo": true,
        "focus": false,
        "panel": "shared",
        "reveal": "always",
        "showReuseMessage": true
      },
      "problemMatcher": "$go",
      "type": "shell"
    },
    {
      "args": [
        "test"
      ],
      "command": "make",
      "detail": "Run all tests with coverage",
      "group": {
        "isDefault": true,
        "kind": "test"
      },
      "label": "go: test",
      "presentation": {
        "clear": false,
        "echo": true,
        "focus": false,
        "panel": "shared",
        "reveal": "always",
        "showReuseMessage": true
      },
      "problemMatcher": "$go",
      "type": "shell"
    },
    {
      "args": [
        "test",
        "-v",
        "."
      ],
      "command": "go",
      "detail": "Run tests in current package",
      "group": "test",
      "label": "go: test (current package)",
      "options": {
        "cwd": "${fileDirname}"
      },
      "presentation": {
        "clear": false,
        "echo": true,
        "focus": false,
        "panel": "shared",
        "reveal": "always",
        "showReuseMessage": true
      },
      "problemMatcher": "$go",
      "type": "shell"
    },
    {
      "args": [
        "lint"
      ],
      "command": "make",
      "detail": "Run golangci-lint checks",
      "group": "build",
      "label": "go: lint",
      "presentation": {
        "clear": false,
        "echo": true,
        "focus": false,
        "panel": "shared",
        "reveal": "always",
        "showReuseMessage": true
      },
      "problemMatcher": [
        "$go",
        {
          "fileLocation": [
            "relative",
            "${workspaceFolder}"
          ],
          "owner": "golangci-lint",
          "pattern": {
            "code": 6,
            "column": 3,
            "file": 1,
            "line": 2,
            "message": 5,
            "regexp": "^(.+):(\\d+):(\\d+):\\s+(warning|error):\\s+(.+)\\s+\\((.+)\\)$",
            "severity": 4
          }
        }
      ],
      "type": "shell"
    },
    {
      "args": [
        "fmt"
      ],
      "command": "make",
      "detail": "Format Go code with gofumpt and gci",
      "group": "build",
      "label": "go: format",
      "presentation": {
        "clear": false,
        "echo": true,
        "focus": false,
        "panel": "shared",
        "reveal": "silent",
        "showReuseMessage": true
      },
      "type": "shell"
    },
    {
      "args": [
        "security"
      ],
      "command": "make",
      "detail": "Run gosec security analysis",
      "group": "build",
      "label": "go: security scan",
      "presentation": {
        "clear": false,
        "echo": true,
        "focus": false,
        "panel": "shared",
        "reveal": "always",
        "showReuseMessage": true
      },
      "problemMatcher": {
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "owner": "gosec",
        "pattern": {
          "code": 8,
          "column": 3,
          "file": 1,
          "line": 2,
          "message": 5,
          "regexp": "^(.+):(\\d+)-(\\d+):\\s+(.+):\\s+(.+)\\s+\\(Confidence:\\s+(HIGH|MEDIUM|LOW),\\s+Severity:\\s+(HIGH|MEDIUM|LOW)\\)\\s+\\((.+)\\)$",
          "severity": 4
        }
      },
      "type": "shell"
    },
    {
      "args": [
        "clean"
      ],
      "command": "make",
      "detail": "Clean build artifacts",
      "group": "build",
      "label": "go: clean",
      "presentation": {
        "clear": false,
        "echo": true,
        "focus": false,
        "panel": "shared",
        "reveal": "silent",
        "showReuseMessage": true
      },
      "type": "shell"
    },
    {
      "args": [
        "bootstrap"
      ],
      "command": "make",
      "detail": "Install all build dependencies",
      "group": "build",
      "label": "go: bootstrap",
      "presentation": {
        "clear": false,
        "echo": true,
        "focus": false,
        "panel": "shared",
        "reveal": "always",
        "showReuseMessage": true
      },
      "type": "shell"
    },
    {
      "args": [
        "start"
      ],
      "command": "npm",
      "detail": "Start React development server on port 3000",
      "group": "build",
      "isBackground": true,
      "label": "react: start dev server",
      "options": {
        "cwd": "${workspaceFolder}/web"
      },
      "presentation": {
        "clear": false,
        "echo": true,
        "focus": false,
        "panel": "dedicated",
        "reveal": "always",
        "showReuseMessage": true
      },
      "problemMatcher": {
        "applyTo": "closedDocuments",
        "background": {
          "activeOnStart": true,
          "beginsPattern": "Starting the development server",
          "endsPattern": "webpack compiled|Failed to compile"
        },
        "fileLocation": [
          "relative",
          "${workspaceFolder}/web"
        ],
        "owner": "typescript",
        "pattern": "$tsc",
        "source": "ts"
      },
      "type": "shell"
    },
    {
      "args": [
        "run",
        "build"
      ],
      "command": "npm",
      "detail": "Build React app for production",
      "group": "build",
      "label": "react: build",
      "options": {
        "cwd": "${workspaceFolder}/web"
      },
      "presentation": {
        "clear": false,
        "echo": true,
        "focus": false,
        "panel": "shared",
        "reveal": "always",
        "showReuseMessage": true
      },
      "problemMatcher": "$tsc",
      "type": "shell"
    },
    {
      "args": [
        "run",
        "build"
      ],
      "command": "npm",
      "detail": "Build Node.js bindings",
      "group": "build",
      "label": "nodejs: build bindings",
      "options": {
        "cwd": "${workspaceFolder}/bindings/nodejs"
      },
      "presentation": {
        "clear": false,
        "echo": true,
        "focus": false,
        "panel": "shared",
        "reveal": "always",
        "showReuseMessage": true
      },
      "problemMatcher": [
        "$tsc",
        "$node-gyp"
      ],
      "type": "shell"
    },
    {
      "args": [
        "test"
      ],
      "command": "npm",
      "detail": "Run Node.js binding tests",
      "group": "test",
      "label": "nodejs: test bindings",
      "options": {
        "cwd": "${workspaceFolder}/bindings/nodejs"
      },
      "presentation": {
        "clear": false,
        "echo": true,
        "focus": false,
        "panel": "shared",
        "reveal": "always",
        "showReuseMessage": true
      },
      "problemMatcher": [
        "$tsc",
        "$eslint-stylish"
      ],
      "type": "shell"
    },
    {
      "args": [
        "venv/bin/activate"
      ],
      "command": "source",
      "detail": "Activate Python virtual environment",
      "group": "build",
      "label": "python: activate env",
      "options": {
        "cwd": "${workspaceFolder}/bindings/python"
      },
      "presentation": {
        "clear": false,
        "echo": true,
        "focus": false,
        "panel": "shared",
        "reveal": "silent",
        "showReuseMessage": true
      },
      "type": "shell"
    },
    {
      "args": [
        "-m",
        "pytest",
        "-v"
      ],
      "command": "python",
      "dependsOn": "python: activate env",
      "detail": "Run Python binding tests",
      "group": "test",
      "label": "python: test bindings",
      "options": {
        "cwd": "${workspaceFolder}/bindings/python"
      },
      "presentation": {
        "clear": false,
        "echo": true,
        "focus": false,
        "panel": "shared",
        "reveal": "always",
        "showReuseMessage": true
      },
      "type": "shell"
    },
    {
      "args": [
        "build",
        "-t",
        "gzh-manager",
        "."
      ],
      "command": "docker",
      "detail": "Build Docker image for the project",
      "group": "build",
      "label": "docker: build image",
      "presentation": {
        "clear": false,
        "echo": true,
        "focus": false,
        "panel": "shared",
        "reveal": "always",
        "showReuseMessage": true
      },
      "type": "shell"
    },
    {
      "args": [
        "test-docker"
      ],
      "command": "make",
      "detail": "Run Docker-based integration tests",
      "group": "test",
      "label": "docker: test integration",
      "presentation": {
        "clear": false,
        "echo": true,
        "focus": false,
        "panel": "shared",
        "reveal": "always",
        "showReuseMessage": true
      },
      "type": "shell"
    },
    {
      "args": [
        "run",
        "--all-files"
      ],
      "command": "pre-commit",
      "detail": "Run pre-commit hooks on all files",
      "group": "build",
      "label": "git: pre-commit",
      "presentation": {
        "clear": false,
        "echo": true,
        "focus": false,
        "panel": "shared",
        "reveal": "always",
        "showReuseMessage": true
      },
      "type": "shell"
    },
    {
      "args": [
        "release-dry-run"
      ],
      "command": "make",
      "detail": "Test release process without publishing",
      "group": "build",
      "label": "release: dry run",
      "presentation": {
        "clear": false,
        "echo": true,
        "focus": false,
        "panel": "shared",
        "reveal": "always",
        "showReuseMessage": true
      },
      "type": "shell"
    }
  ],
  "version": "2.0.0"
}
