# Synclone Configuration Schema
# ==============================
# Schema for gz synclone command configuration files
# Version: 1.0.0

$schema: http://json-schema.org/draft-07/schema#
title: Synclone Configuration Schema
description: Configuration schema for multi-platform repository synchronization
type: object
required:
  - version

properties:
  version:
    type: string
    description: Schema version
    enum: ["1.0"]
    default: "1.0"

  # Global settings
  target:
    type: string
    description: Base directory for all clones
    default: "./repos"
    examples:
      - "./repos"
      - "~/projects"
      - "/data/repositories"

  strategy:
    type: string
    description: Default clone/update strategy
    enum: ["reset", "pull", "fetch", "rebase", "clone", "skip"]
    default: "reset"

  shallow:
    type: boolean
    description: Use shallow clones
    default: false

  depth:
    type: integer
    description: Depth for shallow clones
    minimum: 1
    default: 1

  parallel:
    type: integer
    description: Number of concurrent operations
    minimum: 1
    maximum: 20
    default: 5

  # Platform configurations
  github:
    $ref: "#/definitions/githubConfig"

  gitlab:
    $ref: "#/definitions/gitlabConfig"

  gitea:
    $ref: "#/definitions/giteaConfig"

  gogs:
    $ref: "#/definitions/gogsConfig"

  # Legacy support
  default:
    type: object
    description: Legacy default settings (deprecated, use top-level settings)
    properties:
      protocol:
        type: string
        enum: ["http", "https", "ssh"]
      github:
        type: object
        properties:
          root_path:
            type: string
      gitlab:
        type: object
        properties:
          root_path:
            type: string

  repo_roots:
    type: array
    description: Legacy organization configurations (deprecated, use platform-specific configs)
    items:
      $ref: "#/definitions/legacyRepoRoot"

  ignore_names:
    type: array
    description: Legacy ignore patterns (deprecated, use filters in platform configs)
    items:
      type: string

definitions:
  # GitHub configuration
  githubConfig:
    type: object
    properties:
      enabled:
        type: boolean
        default: true

      base_url:
        type: string
        description: GitHub Enterprise URL
        format: uri
        default: "https://api.github.com"

      api_version:
        type: string
        default: "v3"

      organizations:
        type: array
        items:
          $ref: "#/definitions/githubOrganization"

  githubOrganization:
    type: object
    required: ["name"]
    properties:
      name:
        type: string
        description: Organization name

      target:
        type: string
        description: Clone directory for this org

      token:
        type: string
        description: Personal access token or env var reference
        examples: ["${GITHUB_TOKEN}", "ghp_xxxxxxxxxxxx"]

      strategy:
        type: string
        enum: ["reset", "pull", "fetch", "rebase", "clone", "skip"]

      branch:
        type: string
        description: Default branch to check out

      shallow:
        type: boolean

      depth:
        type: integer
        minimum: 1

      # Filtering options
      include_archived:
        type: boolean
        default: false

      include_forks:
        type: boolean
        default: false

      include_private:
        type: boolean
        default: true

      include_templates:
        type: boolean
        default: false

      filters:
        $ref: "#/definitions/repositoryFilters"

      # Repository overrides
      repositories:
        type: array
        items:
          $ref: "#/definitions/repositoryOverride"

      # Hooks
      hooks:
        $ref: "#/definitions/hooks"

  # GitLab configuration
  gitlabConfig:
    type: object
    properties:
      enabled:
        type: boolean
        default: true

      base_url:
        type: string
        format: uri
        default: "https://gitlab.com"

      groups:
        type: array
        items:
          $ref: "#/definitions/gitlabGroup"

  gitlabGroup:
    type: object
    required: ["id"]
    properties:
      id:
        type: string
        description: Group ID or path

      target:
        type: string
        description: Clone directory for this group

      token:
        type: string
        description: Personal access token or env var reference
        examples: ["${GITLAB_TOKEN}", "glpat-xxxxxxxxxxxx"]

      include_subgroups:
        type: boolean
        default: false

      visibility:
        type: string
        enum: ["public", "internal", "private"]

      strategy:
        type: string
        enum: ["reset", "pull", "fetch", "rebase", "clone", "skip"]

      filters:
        $ref: "#/definitions/repositoryFilters"

      repositories:
        type: array
        items:
          $ref: "#/definitions/repositoryOverride"

  # Gitea configuration
  giteaConfig:
    type: object
    required: ["base_url"]
    properties:
      enabled:
        type: boolean
        default: true

      base_url:
        type: string
        format: uri
        description: Gitea instance URL

      organizations:
        type: array
        items:
          $ref: "#/definitions/giteaOrganization"

  giteaOrganization:
    type: object
    required: ["name"]
    properties:
      name:
        type: string

      target:
        type: string

      token:
        type: string
        examples: ["${GITEA_TOKEN}"]

      strategy:
        type: string
        enum: ["reset", "pull", "fetch", "rebase", "clone", "skip"]

      filters:
        $ref: "#/definitions/repositoryFilters"

  # Gogs configuration
  gogsConfig:
    type: object
    required: ["base_url"]
    properties:
      enabled:
        type: boolean
        default: false

      base_url:
        type: string
        format: uri

      organizations:
        type: array
        items:
          $ref: "#/definitions/gogsOrganization"

  gogsOrganization:
    type: object
    required: ["name"]
    properties:
      name:
        type: string

      target:
        type: string

      token:
        type: string

      strategy:
        type: string
        enum: ["reset", "pull", "fetch", "rebase", "clone", "skip"]

  # Common definitions
  repositoryFilters:
    type: object
    properties:
      languages:
        type: array
        description: Filter by programming languages
        items:
          type: string
        examples: [["Go", "Python", "JavaScript"]]

      topics:
        type: array
        description: Filter by repository topics
        items:
          type: string
        examples: [["kubernetes", "cloud-native"]]

      name_pattern:
        type: string
        description: Regex pattern for repository names
        examples: ["^service-.*", ".*-api$"]

      exclude_pattern:
        type: string
        description: Regex pattern to exclude repositories
        examples: [".*-deprecated$", "^test-.*"]

      min_stars:
        type: integer
        minimum: 0
        description: Minimum star count

      min_size:
        type: integer
        minimum: 0
        description: Minimum repository size in KB

      max_size:
        type: integer
        minimum: 0
        description: Maximum repository size in KB

      updated_after:
        type: string
        format: date
        description: Only repos updated after this date
        examples: ["2024-01-01"]

  repositoryOverride:
    type: object
    required: ["name"]
    properties:
      name:
        type: string
        description: Repository name

      strategy:
        type: string
        enum: ["reset", "pull", "fetch", "rebase", "clone", "skip"]

      branch:
        type: string

      skip:
        type: boolean
        description: Skip this repository
        default: false

  hooks:
    type: object
    properties:
      pre_clone:
        type: string
        description: Script to run before cloning

      post_clone:
        type: string
        description: Script to run after cloning

      on_error:
        type: string
        description: Script to run on error

  # Legacy support
  legacyRepoRoot:
    type: object
    required: ["root_path", "provider", "org_name"]
    properties:
      root_path:
        type: string

      provider:
        type: string
        enum: ["github", "gitlab", "gitea", "gogs"]

      protocol:
        type: string
        enum: ["http", "https", "ssh"]

      org_name:
        type: string

      group_name:
        type: string

# Examples section
examples:
  - version: "1.0"
    target: "./repos"
    strategy: "reset"
    parallel: 5
    github:
      enabled: true
      organizations:
        - name: "kubernetes"
          target: "./k8s-repos"
          include_archived: false
          filters:
            languages: ["Go"]
            min_stars: 100

  - version: "1.0"
    default:
      protocol: "https"
      github:
        root_path: "$HOME/github-repos"
    repo_roots:
      - root_path: "$HOME/work"
        provider: "github"
        protocol: "ssh"
        org_name: "mycompany"
