# Quality Configuration Schema
# ============================
# Schema for gz quality command configuration files
# Version: 1.0.0

$schema: http://json-schema.org/draft-07/schema#
title: Quality Configuration Schema
description: Configuration schema for multi-language code quality management
type: object
required:
  - version

properties:
  version:
    type: string
    description: Schema version
    enum: ["1.0"]
    default: "1.0"

  # Global settings
  enabled:
    type: boolean
    description: Enable quality checks globally
    default: true

  auto_fix:
    type: boolean
    description: Automatically fix issues when possible
    default: true

  parallel:
    type: boolean
    description: Run checks in parallel
    default: true

  fail_on_error:
    type: boolean
    description: Exit with error code on quality issues
    default: true

  ignore_patterns:
    type: array
    description: Global ignore patterns
    items:
      type: string
    examples:
      - ["vendor/", "node_modules/", ".git/", "dist/"]

  # Language configurations
  languages:
    type: object
    properties:
      go:
        $ref: "#/definitions/goConfig"

      python:
        $ref: "#/definitions/pythonConfig"

      javascript:
        $ref: "#/definitions/javascriptConfig"

      typescript:
        $ref: "#/definitions/typescriptConfig"

      rust:
        $ref: "#/definitions/rustConfig"

      java:
        $ref: "#/definitions/javaConfig"

      c:
        $ref: "#/definitions/cConfig"

      cpp:
        $ref: "#/definitions/cppConfig"

  # Tool configurations
  tools:
    type: object
    description: Global tool configurations
    properties:
      timeout:
        type: string
        description: Maximum time for each tool
        pattern: "^[0-9]+(s|m|h)$"
        default: "5m"

      cache:
        type: boolean
        description: Enable tool result caching
        default: true

      cache_dir:
        type: string
        description: Cache directory
        default: ".quality-cache"

  # CI/CD integration
  ci:
    type: object
    properties:
      enabled:
        type: boolean
        default: true

      report_format:
        type: string
        enum: ["json", "junit", "sarif", "checkstyle"]
        default: "json"

      report_path:
        type: string
        default: "quality-report.json"

      annotations:
        type: boolean
        description: Create PR/MR annotations
        default: true

definitions:
  # Common tool configuration
  toolConfig:
    type: object
    properties:
      enabled:
        type: boolean
        default: true

      auto_install:
        type: boolean
        description: Auto-install if missing
        default: true

      version:
        type: string
        description: Specific version to use

      config_file:
        type: string
        description: Custom config file path

      args:
        type: array
        description: Additional command arguments
        items:
          type: string

  # Go configuration
  goConfig:
    type: object
    properties:
      enabled:
        type: boolean
        default: true

      formatters:
        type: object
        properties:
          gofumpt:
            allOf:
              - $ref: "#/definitions/toolConfig"
              - type: object
                properties:
                  extra:
                    type: boolean
                    description: Enable extra rules
                    default: true

          gci:
            allOf:
              - $ref: "#/definitions/toolConfig"
              - type: object
                properties:
                  sections:
                    type: array
                    items:
                      type: string
                    default: ["standard", "default", "prefix(github.com/yourusername)"]

      linters:
        type: object
        properties:
          golangci_lint:
            allOf:
              - $ref: "#/definitions/toolConfig"
              - type: object
                properties:
                  config:
                    type: string
                    default: ".golangci.yml"

                  fix:
                    type: boolean
                    default: true

                  presets:
                    type: array
                    items:
                      type: string
                    default: ["bugs", "performance", "format"]

          go_vet:
            $ref: "#/definitions/toolConfig"

          staticcheck:
            $ref: "#/definitions/toolConfig"

  # Python configuration
  pythonConfig:
    type: object
    properties:
      enabled:
        type: boolean
        default: true

      python_version:
        type: string
        pattern: "^[0-9]+\\.[0-9]+$"
        default: "3.9"

      formatters:
        type: object
        properties:
          black:
            allOf:
              - $ref: "#/definitions/toolConfig"
              - type: object
                properties:
                  line_length:
                    type: integer
                    default: 88

          isort:
            allOf:
              - $ref: "#/definitions/toolConfig"
              - type: object
                properties:
                  profile:
                    type: string
                    default: "black"

          autopep8:
            $ref: "#/definitions/toolConfig"

      linters:
        type: object
        properties:
          flake8:
            allOf:
              - $ref: "#/definitions/toolConfig"
              - type: object
                properties:
                  max_line_length:
                    type: integer
                    default: 88

                  ignore:
                    type: array
                    items:
                      type: string
                    default: ["E203", "W503"]

          pylint:
            $ref: "#/definitions/toolConfig"

          mypy:
            allOf:
              - $ref: "#/definitions/toolConfig"
              - type: object
                properties:
                  strict:
                    type: boolean
                    default: false

          ruff:
            allOf:
              - $ref: "#/definitions/toolConfig"
              - type: object
                properties:
                  fix:
                    type: boolean
                    default: true

  # JavaScript configuration
  javascriptConfig:
    type: object
    properties:
      enabled:
        type: boolean
        default: true

      package_manager:
        type: string
        enum: ["npm", "yarn", "pnpm"]
        default: "npm"

      formatters:
        type: object
        properties:
          prettier:
            allOf:
              - $ref: "#/definitions/toolConfig"
              - type: object
                properties:
                  config:
                    type: string
                    default: ".prettierrc"

      linters:
        type: object
        properties:
          eslint:
            allOf:
              - $ref: "#/definitions/toolConfig"
              - type: object
                properties:
                  fix:
                    type: boolean
                    default: true

                  config:
                    type: string
                    default: ".eslintrc.js"

  # TypeScript configuration
  typescriptConfig:
    type: object
    properties:
      enabled:
        type: boolean
        default: true

      extends:
        type: string
        description: Extend from JavaScript config
        default: "javascript"

      compiler:
        type: object
        properties:
          tsc:
            allOf:
              - $ref: "#/definitions/toolConfig"
              - type: object
                properties:
                  config:
                    type: string
                    default: "tsconfig.json"

                  strict:
                    type: boolean
                    default: true

  # Rust configuration
  rustConfig:
    type: object
    properties:
      enabled:
        type: boolean
        default: true

      formatters:
        type: object
        properties:
          rustfmt:
            allOf:
              - $ref: "#/definitions/toolConfig"
              - type: object
                properties:
                  edition:
                    type: string
                    default: "2021"

      linters:
        type: object
        properties:
          clippy:
            allOf:
              - $ref: "#/definitions/toolConfig"
              - type: object
                properties:
                  fix:
                    type: boolean
                    default: true

                  level:
                    type: string
                    enum: ["allow", "warn", "deny", "forbid"]
                    default: "warn"

  # Java configuration
  javaConfig:
    type: object
    properties:
      enabled:
        type: boolean
        default: true

      java_version:
        type: string
        default: "11"

      build_tool:
        type: string
        enum: ["maven", "gradle"]
        default: "maven"

      formatters:
        type: object
        properties:
          google_java_format:
            $ref: "#/definitions/toolConfig"

      linters:
        type: object
        properties:
          checkstyle:
            allOf:
              - $ref: "#/definitions/toolConfig"
              - type: object
                properties:
                  config:
                    type: string
                    default: "checkstyle.xml"

          spotbugs:
            $ref: "#/definitions/toolConfig"

          pmd:
            $ref: "#/definitions/toolConfig"

  # C configuration
  cConfig:
    type: object
    properties:
      enabled:
        type: boolean
        default: true

      standard:
        type: string
        enum: ["c89", "c99", "c11", "c17"]
        default: "c11"

      formatters:
        type: object
        properties:
          clang_format:
            allOf:
              - $ref: "#/definitions/toolConfig"
              - type: object
                properties:
                  style:
                    type: string
                    default: "Google"

      linters:
        type: object
        properties:
          clang_tidy:
            $ref: "#/definitions/toolConfig"

          cppcheck:
            $ref: "#/definitions/toolConfig"

  # C++ configuration
  cppConfig:
    type: object
    properties:
      enabled:
        type: boolean
        default: true

      standard:
        type: string
        enum: ["c++11", "c++14", "c++17", "c++20"]
        default: "c++17"

      extends:
        type: string
        description: Extend from C config
        default: "c"

# Examples section
examples:
  - version: "1.0"
    auto_fix: true
    languages:
      go:
        enabled: true
        formatters:
          gofumpt:
            enabled: true
        linters:
          golangci_lint:
            enabled: true
            fix: true
      python:
        enabled: true
        formatters:
          black:
            enabled: true
          isort:
            enabled: true
        linters:
          ruff:
            enabled: true
            fix: true

  - version: "1.0"
    ci:
      enabled: true
      report_format: "sarif"
      annotations: true
    languages:
      javascript:
        enabled: true
        package_manager: "pnpm"
        formatters:
          prettier:
            enabled: true
        linters:
          eslint:
            enabled: true
            fix: false
